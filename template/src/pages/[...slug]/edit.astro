---
import { getAllFileDatum, getStoryFragmentBySlug } from "../../api/turso";
import { cleanTursoFileDatum } from "../../utils/compositor/tursoFileDatum";
import StoryKeep from "../../layouts/StoryKeep.astro";
import { EditModal } from "../../components/storykeep/EditModal";
import { StoryFragment } from "../../components/storykeep/StoryFragment";
import { StoryKeepStore } from "../../components/storykeep/StoryKeepStore";
import { StoryKeepHeader } from "../../components/storykeep/StoryKeepHeader";
import { isTursoReady, isContentPrimed, isContentReady } from "../../api/turso";
import { getSetupChecks } from "../../utils/setupChecks";
import { components } from "../../custom/CodeHook.astro";
import type { AuthStatus } from "../../types";

const user = Astro.locals.user as AuthStatus;

const { slug } = Astro.params;

if (!slug) return Astro.redirect("/404");

// confirm set-up
const { hasTurso, hasConcierge } = getSetupChecks();
const notPreviewNotReady = hasConcierge && !hasTurso;
const hasTursoReady = !notPreviewNotReady ? await isTursoReady() : false;
const hasContentReady = !notPreviewNotReady ? await isContentReady() : false;
const hasContentPrimed = !notPreviewNotReady ? await isContentPrimed() : false;
if (!hasTursoReady || !hasContentPrimed) {
  return Astro.redirect("/storykeep");
}

const baseUrl = new URL(Astro.url.pathname, Astro.url);
const canonicalURL = new URL(`/${slug}`, baseUrl).href;

const filesRaw = await getAllFileDatum();
const files = cleanTursoFileDatum(filesRaw);

const storyfragment = await getStoryFragmentBySlug(slug);
if (!storyfragment && slug !== `create`) {
  return Astro.redirect("/404");
}
---

<StoryKeep
  title={storyfragment?.title}
  pubDatetime={storyfragment?.created}
  modDatetime={storyfragment?.changed}
  ogImage={typeof storyfragment?.socialImagePath === `string`
    ? storyfragment.socialImagePath
    : undefined}
  canonicalURL={canonicalURL}
>
  <div
    id="storykeep-content"
    class="m-0 p-0 flex flex-col bg-myblue w-full"
    style="background-image:repeating-linear-gradient( 45deg, transparent, transparent 10px, rgba(0,0,0, 0.1) 10px, rgba(0,0,0, 0.1) 20px )"
    ,
  >
    {storyfragment && <StoryKeepStore client:only="react" storyfragment={storyfragment} />}
    <header
      class="z-[9001] sticky top-0 z-10 bg-mywhite flex justify-between items-center w-full"
      id="main-header"
    >
      <StoryKeepHeader
        client:only="react"
        id={slug === "create" ? `create` : storyfragment?.id ? storyfragment.id : `error`}
        slug={slug}
        isContext={false}
        user={user}
        originalData={storyfragment}
        hasContentReady={hasContentReady}
      />
    </header>

    <div id="storykeep" class="bg-white overflow-auto mx-auto w-full">
      <main id="website-content" class="overflow-auto w-full">
        <StoryFragment
          client:only="react"
          id={slug === "create" ? null : (storyfragment?.id ?? `error`)}
          slug={slug}
          isContext={false}
          knownCodeHooks={components ? Object.keys(components) : []}
        />
        <div
          class="h-96 m-0 p-0 flex flex-col bg-myblack w-full"
          style="background-image:repeating-linear-gradient( 45deg, transparent, transparent 10px, rgba(0,0,0, 0.1) 10px, rgba(0,0,0, 0.1) 20px )"
        >
        </div>
      </main>

      <EditModal
        client:only="react"
        id={slug === "create" ? `create` : storyfragment?.id ? storyfragment.id : `error`}
        files={files}
      />
    </div>
  </div>
</StoryKeep>
