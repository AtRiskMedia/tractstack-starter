---
import { ulid } from "ulid";
import StoryKeep from "../../../layouts/StoryKeep.astro";
import CreateNewPage from "../../../components/storykeep/components/CreateNewPage";
import { getSetupChecks } from "../../../utils/setupChecks";
import { isTursoReady, getContentMap } from "../../../api/turso";
import type { ContentMap } from "../../../types";

// confirm set-up
const { hasTurso, hasConcierge } = getSetupChecks();
const notPreviewNotReady = hasConcierge && !hasTurso;
const hasTursoReady = !notPreviewNotReady ? await isTursoReady() : false;
if (!hasTursoReady) {
  return Astro.redirect("/storykeep");
}

const slug = `create`;
const newId = ulid();

const baseUrl = new URL(Astro.url.pathname, Astro.url);
const canonicalURL = new URL(`/context/${slug}`, baseUrl).href;

const contentMap: ContentMap[] = await getContentMap();
const contentMapSlugs = contentMap?.map((p: ContentMap) => p.slug) || [];
---

<StoryKeep
  title="Create New Context Page"
  pubDatetime={new Date()}
  modDatetime={null}
  canonicalURL={canonicalURL}
>
  <div id="storykeep-content">
    <CreateNewPage
      mode="context"
      contentMapSlugs={contentMapSlugs}
      newId={newId}
      tractStackId={``}
      client:load
    />
  </div>
</StoryKeep>
