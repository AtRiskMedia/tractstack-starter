---
import { ulid } from "ulid";
import { getConfig, validateConfig } from "../../../utils/core/config";
import StoryKeep from "../../../layouts/StoryKeep.astro";
import { getTractStackIdBySlug } from "../../../utils/db/utils";
import CreateNewPage from "../../../components/storykeep/create/CreateNewPage";
import { getContentMap } from "../../../utils/db/utils";
import type { ContentMap } from "../../../types";

const slug = `create`;
const newId = ulid();

const config = await getConfig();
const validation = await validateConfig(config);
if (!validation.isValid || !config) {
  return Astro.redirect("/storykeep/init");
}
const canonicalURL = `/${slug}`;

const homeSlug = config?.init?.HOME_SLUG;
const tractStackHomeSlug =
  typeof config?.init?.TRACTSTACK_HOME_SLUG === `string` ? config.init.TRACTSTACK_HOME_SLUG : null;
if (!tractStackHomeSlug) return Astro.redirect("/404");
const tractStackId = await getTractStackIdBySlug(tractStackHomeSlug);
if (!tractStackId) return Astro.redirect("/404");
const contentMap: ContentMap[] = await getContentMap();
const contentMapSlugs = contentMap?.map((p: ContentMap) => p.slug) || [];
---

<StoryKeep
  title="Create New Page"
  pubDatetime={new Date()}
  modDatetime={null}
  canonicalURL={canonicalURL}
  config={config}
>
  <div id="storykeep-content">
    <CreateNewPage
      mode="storyfragment"
      contentMapSlugs={contentMapSlugs}
      newId={newId}
      tractStackId={tractStackId}
      hello={!homeSlug}
      config={config}
      client:load
    />
  </div>
</StoryKeep>
