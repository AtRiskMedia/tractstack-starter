---
import { components as codeHookComponents } from "@/custom/CodeHook.astro";
import { getConfig, validateConfig } from "@/utils/core/config";
import { ReactNodesWrapper } from "@/components/storykeep/compositor-nodes/ReactNodesWrapper";
import { getCtx } from "@/store/nodes";
import { getGenerateAllNodes } from "@/utils/db/nodes/generate";
import StoryKeepHeader from "@/components/storykeep/controls/StoryKeepHeader";
import StoryKeepToolBar from "@/components/storykeep/controls/StoryKeepToolBar";
import StoryKeepToolMode from "@/components/storykeep/controls/StoryKeepToolMode";
import SettingsPanel from "@/components/storykeep/controls/SettingsPanel";
import StoryKeep from "@/layouts/StoryKeep.astro";
import PullAnalytics from "@/components/storykeep/controls/recharts/PullAnalytics.tsx";
//import { NodesSerializer_Json } from "@/store/nodesSerializer_Json";

const config = await getConfig();
const validation = await validateConfig(config);
if (!validation.isValid || !config) {
  return Astro.redirect("/storykeep/init");
}
const { slug } = Astro.params;
if (!slug) return Astro.redirect("/404");

const canonicalURL = `/${slug}`;

const nodes = await getGenerateAllNodes();
getCtx().buildNodesTreeFromFragmentNodes(nodes);

const storyfragmentNode = getCtx().getStoryFragmentNodeBySlug(slug);
if (!storyfragmentNode) {
  return Astro.redirect("/404");
}

//getCtx().rootNodeId.set(storyfragmentNode.id);
//const s = new NodesSerializer_Json();
//s.save(getCtx());
---

<StoryKeep
  title={storyfragmentNode.title}
  pubDatetime={storyfragmentNode.created || new Date()}
  modDatetime={storyfragmentNode.changed || new Date()}
  ogImage={typeof storyfragmentNode?.socialImagePath === `string`
    ? storyfragmentNode.socialImagePath
    : undefined}
  config={config}
  canonicalURL={canonicalURL}
>
  <header id="mainHeader" class="fixed top-0 left-0 right-0 bg-mywhite z-[8999] drop-shadow">
    <StoryKeepHeader
      keyboardAccessibleEnabled={config.init?.KEYBOARD_ACCESSIBLE || false}
      nodeId={storyfragmentNode.id}
      client:load
    />
    <PullAnalytics id={storyfragmentNode.id} client:only="react" />
  </header>
  <div id="headerSpacer"></div>

  <div class="flex min-h-screen">
    <nav
      id="mainNav"
      class="fixed bg-mywhite z-40 bottom-0
      left-0 right-0 pt-1.5
      md:bottom-auto md:left-0 md:top-0 md:w-16 md:h-screen md:pt-0"
    >
      <div
        class="drop-shadow
        flex flex-wrap gap-4 justify-around py-3.5
        md:flex-col md:items-center md:space-y-2 md:space-x-0 md:py-2 md:gap-8 md:mt-8"
      >
        <StoryKeepToolMode client:load />
      </div>
    </nav>

    <nav id="toolbarNav" class="fixed z-30 w-full md:w-auto">
      <StoryKeepToolBar client:load />
    </nav>

    <div class="hidden md:block w-16 flex-shrink-0"></div>

    <main class="flex-1 relative">
      <div
        class="bg-myblue/20 px-4 pb-28"
        style={{
          backgroundImage:
            "repeating-linear-gradient(135deg, transparent, transparent 10px, rgba(0,0,0,0.05) 10px, rgba(0,0,0,0.05) 20px)",
        }}
      >
        <ReactNodesWrapper
          id={storyfragmentNode.id}
          nodes={nodes}
          config={config}
          client:only="react"
        />
      </div>
    </main>
  </div>

  <div id="navSpacer" class="md:hidden h-32"></div>

  <SettingsPanel
    config={config}
    availableCodeHooks={Object.keys(codeHookComponents)}
    client:only="react"
  />

  <script>
    import { setupLayoutObservers, setupLayoutStyles } from "../../../utils/storykeep/layout";
    setupLayoutStyles();
    setupLayoutObservers();
  </script>
</StoryKeep>
