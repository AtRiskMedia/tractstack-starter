---
import Node from "../../../storykeep/compositor-nodes/Node.astro";
import { allNodes, getChildNodeIDs, getNodeClasses } from "../../../../store/nodes";
import type { MarkdownPaneFragmentNode } from "../../../../types";
import { viewportStore } from "../../../../store/storykeep";

const { nodeId, depth = 0, childId = -1 } = Astro.props;
const node = allNodes.get().get(nodeId) as MarkdownPaneFragmentNode;
const parentCss = (node?.parentCss as string[]) || [];

const elements = getChildNodeIDs(nodeId);
---

{parentCss.length > 0 && depth < parentCss.length ? (
<div class={getNodeClasses(nodeId, viewportStore.get().value, depth)}>
  <Astro.self nodeId={nodeId} depth={depth + 1} />
</div>
  ) : (
  getChildNodeIDs(nodeId).map(x => <Node nodeId={x} />)
)}