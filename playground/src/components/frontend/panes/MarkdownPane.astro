---
import PaneFromAst from "./PaneFromAst.astro";
import { classNames } from "../../../utils/common/helpers";
import type {
  Config,
  MarkdownLookup,
  FileNode,
  MarkdownPaneDatum,
  MarkdownDatum,
} from "../../../types";

interface Props {
  payload: MarkdownPaneDatum;
  markdown: MarkdownDatum;
  files: FileNode[];
  paneId: string;
  slug: string;
  isContext: boolean;
  markdownLookup: MarkdownLookup;
  config: Config;
}

const { config, payload, markdown, files, paneId, slug, isContext, markdownLookup } = Astro.props;
const hasHidden =
  payload.hiddenViewports.includes(`desktop`) ||
  payload.hiddenViewports.includes(`tablet`) ||
  payload.hiddenViewports.includes(`mobile`);
const hidden = hasHidden
  ? ``.concat(
      payload.hiddenViewports.includes(`desktop`) ? `xl:hidden` : `xl:grid`,
      payload.hiddenViewports.includes(`tablet`) ? `md:hidden` : `md:grid`,
      payload.hiddenViewports.includes(`mobile`) ? `hidden` : `grid`
    )
  : ``;
const optionsPayload = payload.optionsPayload;
const astPayload = {
  ast: markdown.htmlAst.children,
  buttonData: optionsPayload?.buttons || {},
  imageData: files,
};
const injectClassNames = optionsPayload?.classNames?.all || {};
const classNamesParent = optionsPayload?.classNamesParent
  ? optionsPayload.classNamesParent?.all
  : ``;
const parentClasses = Array.isArray(classNamesParent)
  ? classNamesParent
  : typeof classNamesParent === "string"
    ? [classNamesParent]
    : [``];
---

{
  parentClasses.reverse().reduce(
    /* eslint-disable @typescript-eslint/no-explicit-any */
    (content: any, cssClass: string) => {
      return <div class={classNames(hidden, cssClass)}>{content}</div>;
    },
    astPayload.ast
      .filter((e: any) => !(e?.type === `text` && e?.value === `\n`))
      .map((thisAstPayload: any, idx: number) => (
        <PaneFromAst
          payload={{
            ...astPayload,
            ast: [thisAstPayload],
          }}
          thisClassNames={injectClassNames}
          paneId={paneId}
          slug={slug}
          isContext={isContext}
          idx={null}
          outerIdx={idx}
          markdownLookup={markdownLookup}
          config={config}
        />
      ))
  )
}
