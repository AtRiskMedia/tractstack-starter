---
import { getCtx } from "@/store/nodes.ts";
import Node from "@/components/compositor-nodes/Node.astro";
import type { FlatNode } from "@/types.ts";

const { nodeId } = Astro.props;
const node = getCtx().allNodes.get().get(nodeId) as FlatNode;
const childNodeIDs = getCtx().getChildNodeIDs(node?.parentId ?? "");
const currentIndex = childNodeIDs.indexOf(nodeId);
const nextNode =
  currentIndex < childNodeIDs.length - 1
    ? (getCtx()
        .allNodes.get()
        .get(childNodeIDs[currentIndex + 1]) as FlatNode)
    : null;
const needsTrailingSpace =
  nextNode &&
  nextNode.tagName === "text" &&
  !(
    nextNode.copy?.startsWith(".") ||
    nextNode.copy?.startsWith(",") ||
    nextNode.copy?.startsWith(";") ||
    nextNode.copy?.startsWith(":")
  );

const isExternal = node.buttonPayload?.isExternalUrl === true;
const targetAttr = isExternal ? { target: "_blank", rel: "noopener noreferrer" } : {};
---

<a class={getCtx().getNodeClasses(nodeId, `auto`)} href={node.href} {...targetAttr}>
  <span class="whitespace-nowrap"
    >{
      getCtx()
        .getChildNodeIDs(nodeId)
        .map((id: string) => <Node nodeId={id} />)
    }</span
  ></a
>{needsTrailingSpace && " "}
