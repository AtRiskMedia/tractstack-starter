---
import { ulid } from "ulid";
import { getConfig, validateConfig } from "../../../../utils/core/config";
import StoryKeep from "../../../../layouts/StoryKeep.astro";
import { getTractStackIdBySlug, getContentMap } from "../../../../utils/db/utils";
import CreateNewAiPage from "../../../../components/storykeep/create/CreateNewAiPage";
import type { ContentMap } from "../../../../types";

const slug = `create`;
const newId = ulid();

const config = await getConfig();
const validation = await validateConfig(config);
if (!validation.isValid || !config) {
  return Astro.redirect("/storykeep/init");
}
const canonicalURL = `/${slug}`;

const homeSlug = config?.init?.HOME_SLUG;
const tractStackHomeSlug =
  typeof config?.init?.TRACTSTACK_HOME_SLUG === `string` ? config.init.TRACTSTACK_HOME_SLUG : null;
if (!tractStackHomeSlug) return Astro.redirect("/404");

const tractStackId = await getTractStackIdBySlug(tractStackHomeSlug);
if (!tractStackId) return Astro.redirect("/404");

const contentMap: ContentMap[] = await getContentMap();
const contentMapSlugs = contentMap?.map((p: ContentMap) => p.slug) || [];
---

<StoryKeep
  title="Create New Page"
  pubDatetime={new Date()}
  modDatetime={null}
  canonicalURL={canonicalURL}
  config={config}
>
  <div id="storykeep-content">
    {
      validation?.capabilities?.hasAssemblyAI ? (
        <CreateNewAiPage
          mode="storyfragment"
          contentMapSlugs={contentMapSlugs}
          newId={newId}
          tractStackId={tractStackId}
          hello={slug === homeSlug}
          config={config}
          client:only="react"
        />
      ) : (
        <>
          <div>AssemblyAI API key not found</div>
          <a
            class="text-myblue underline hover:text-black hover:underline-offset-2"
            href="/storykeep/settings"
          >
            Goto Settings
          </a>
        </>
      )
    }
  </div>
</StoryKeep>
