---
import Layout from "../../layouts/Layout.astro";
import { tursoClient } from "../../utils/db/client";
import { getConfig, validateConfig } from "../../utils/core/config";
import InitWizard from "../../components/storykeep/init/InitWizard";
import type { InitConfig } from "../../types";

const config = await getConfig();
const validation = await validateConfig(config);

// Create a secure version of config by removing sensitive data
const secureConfig = config
  ? {
      ...config,
      init: {
        ...((config.init as InitConfig) || {}),
      },
    }
  : null;

// Create a secure version of validation
const secureValidation = {
  isValid: validation.isValid,
  hasPassword: validation.hasPassword,
  capabilities: validation.capabilities,
  errors: validation.errors,
  config: secureConfig,
};

let error = "";
try {
  await tursoClient.getClient();
} catch (e) {
  console.error("Database initialization error:", e);
  error = e instanceof Error ? e.message : "Unknown error";
}
---

<Layout title="Initialize Site">
  <main>
    {error && <div class="error">{error}</div>}
    <InitWizard
      client:only="react"
      hasConcierge={validation.capabilities.hasConcierge}
      validation={secureValidation}
      config={secureConfig}
    />
  </main>
</Layout>
